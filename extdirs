#!/bin/sh
# extdirs

VERSION='1.0.0'

extdirs_main() {
	trap _exit INT TERM

	e_args=16
	e_missing_app=17

	_require realpath

	scriptinv="$( basename "$0" )"
	scriptpath="$( realpath "$0" )"
	scriptname="$( basename "$scriptpath" )"

	dryrun=0
	lowercase=0

	while getopts hlnv opt
	do
		case $opt in
			h) cmd=help ;;
			l) lowercase=1 ;;
			n) dryrun=1 ;;
			v) cmd=version ;;
			*) _invalid_opt ;;
		esac
	done

	shift "$(( OPTIND - 1 ))"

	[ $# -lt 1 ] && cmd=help
	[ -z "$cmd" ] && cmd=process

	case "$cmd" in
		help|process|version) "extdirs_$cmd" "$@" ;;
		*) _invalid_cmd ;;
	esac

	_exit
}

extdirs_help() {
cat <<USAGE
$scriptname $VERSION

USAGE: $scriptinv [-hv] <files>

Move files into separate directories by their extensions.

EXAMPLE:

	# Creates JPG, GIF, and PNG directories and moves files into them:

	extdirs *.jpg *.gif *.png

OPTIONS:

	-h        Show this help screen.
	-l        Create directory names in lowercase.
	-n        Dry run. Do not move files.
	-v        Show script name and version number.

USAGE
}

extdirs_process() {
	# shellcheck disable=SC2012
	ls -- "$@" | while read -r filename
	do
		ext="$(
			echo "$filename" \
				| grep -Eo '.\.[^\.]+$' \
				| _adjust_case \
				| sed -E 's/^.\.//'
		)"

		[ -z "$ext" ] && ext='NOEXT'

		_mkdir "$ext"

		echo "$filename => $ext/$filename"
		[ "$dryrun" -ne 0 ] && continue
		mv "$filename" "$ext/$filename"
	done
}

extdirs_version() {
	_echo "$scriptname $VERSION"
}

_adjust_case() {
	[ "$lowercase" -eq 1 ] && tr '[:upper:]' '[:lower:]' && return
	tr '[:lower:]' '[:upper:]'
}

_echo() {
	echo "$@"
}

_error() {
	_echo "$@" >&2
}

_exit() {
	exit_code=$?
	exit $exit_code
}

_fatal() {
	exit_code="$1"
	shift
	_error "$@"
	exit "$exit_code"
}

_invalid_cmd() {
	_error "Invalid command: $cmd"
	_echo
	extdirs_help
	exit $e_args
}

_invalid_opt() {
	_error "Invalid option: $opt"
	_echo
	extdirs_help
	exit $e_args
}

_mkdir() {
	dirname="$1"
	[ -d "$dirname" ]	&& return
	echo "$dirname/"
	[ $dryrun -ne 0 ] && return 0
	mkdir -p "$dirname"
}

_require() {
	missing_bin=0

	for bin in "$@"
	do
		if ! which "$bin" > /dev/null 2>&1
		then
			missing_bin=1
			_error "Required: $bin"
		fi
	done

	if [ $missing_bin -ne 0 ]
	then
		_fatal $e_missing_app "One or more executables or apps are missing."
	fi
}

extdirs_main "$@"
